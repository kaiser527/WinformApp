// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WinFormApp.Models;

namespace WinFormApp.Migrations
{
    [DbContext(typeof(CoffeeShopContext))]
    partial class CoffeeShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WinFormApp.Models.Account", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("UserName");

                    b.HasIndex("IdRole");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            UserName = "admin",
                            DisplayName = "Administrator",
                            IdRole = 1,
                            PassWord = "123456"
                        },
                        new
                        {
                            UserName = "john_doe",
                            DisplayName = "John Doe",
                            IdRole = 2,
                            PassWord = "123456"
                        },
                        new
                        {
                            UserName = "jane_smith",
                            DisplayName = "Jane Smith",
                            IdRole = 2,
                            PassWord = "123456"
                        },
                        new
                        {
                            UserName = "michael",
                            DisplayName = "Michael Johnson",
                            IdRole = 2,
                            PassWord = "123456"
                        },
                        new
                        {
                            UserName = "emily",
                            DisplayName = "Emily Davis",
                            IdRole = 3,
                            PassWord = "123456"
                        },
                        new
                        {
                            UserName = "david",
                            DisplayName = "David Wilson",
                            IdRole = 2,
                            PassWord = "123456"
                        },
                        new
                        {
                            UserName = "sarah",
                            DisplayName = "Sarah Brown",
                            IdRole = 3,
                            PassWord = "123456"
                        },
                        new
                        {
                            UserName = "chris",
                            DisplayName = "Chris Lee",
                            IdRole = 2,
                            PassWord = "123456"
                        },
                        new
                        {
                            UserName = "amanda",
                            DisplayName = "Amanda Miller",
                            IdRole = 2,
                            PassWord = "123456"
                        },
                        new
                        {
                            UserName = "matthew",
                            DisplayName = "Matthew Garcia",
                            IdRole = 3,
                            PassWord = "123456"
                        });
                });

            modelBuilder.Entity("WinFormApp.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCheckOut")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int>("IdTable")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTable");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("WinFormApp.Models.BillInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("IdBill")
                        .HasColumnType("int");

                    b.Property<int>("IdFood")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBill");

                    b.HasIndex("IdFood");

                    b.ToTable("BillInfos");
                });

            modelBuilder.Entity("WinFormApp.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCategory = 1,
                            Name = "Espresso",
                            Price = 2.5
                        },
                        new
                        {
                            Id = 2,
                            IdCategory = 1,
                            Name = "Latte",
                            Price = 3.5
                        },
                        new
                        {
                            Id = 3,
                            IdCategory = 1,
                            Name = "Cappuccino",
                            Price = 3.7999999999999998
                        },
                        new
                        {
                            Id = 4,
                            IdCategory = 1,
                            Name = "Americano",
                            Price = 2.7999999999999998
                        },
                        new
                        {
                            Id = 5,
                            IdCategory = 2,
                            Name = "Green Tea",
                            Price = 2.0
                        },
                        new
                        {
                            Id = 6,
                            IdCategory = 2,
                            Name = "Black Tea",
                            Price = 2.0
                        },
                        new
                        {
                            Id = 7,
                            IdCategory = 2,
                            Name = "Herbal Tea",
                            Price = 2.5
                        },
                        new
                        {
                            Id = 8,
                            IdCategory = 2,
                            Name = "Milk Tea",
                            Price = 3.0
                        },
                        new
                        {
                            Id = 9,
                            IdCategory = 3,
                            Name = "Mango Smoothie",
                            Price = 4.5
                        },
                        new
                        {
                            Id = 10,
                            IdCategory = 3,
                            Name = "Strawberry Smoothie",
                            Price = 4.5
                        },
                        new
                        {
                            Id = 11,
                            IdCategory = 3,
                            Name = "Banana Smoothie",
                            Price = 4.0
                        },
                        new
                        {
                            Id = 12,
                            IdCategory = 3,
                            Name = "Avocado Smoothie",
                            Price = 5.0
                        },
                        new
                        {
                            Id = 13,
                            IdCategory = 4,
                            Name = "Croissant",
                            Price = 2.5
                        },
                        new
                        {
                            Id = 14,
                            IdCategory = 4,
                            Name = "Muffin",
                            Price = 2.0
                        },
                        new
                        {
                            Id = 15,
                            IdCategory = 4,
                            Name = "Cheesecake",
                            Price = 3.5
                        },
                        new
                        {
                            Id = 16,
                            IdCategory = 4,
                            Name = "Chocolate Cake",
                            Price = 3.7999999999999998
                        },
                        new
                        {
                            Id = 17,
                            IdCategory = 5,
                            Name = "Ham Sandwich",
                            Price = 4.0
                        },
                        new
                        {
                            Id = 18,
                            IdCategory = 5,
                            Name = "Chicken Sandwich",
                            Price = 4.5
                        },
                        new
                        {
                            Id = 19,
                            IdCategory = 5,
                            Name = "Veggie Sandwich",
                            Price = 3.7999999999999998
                        },
                        new
                        {
                            Id = 20,
                            IdCategory = 6,
                            Name = "Orange Juice",
                            Price = 3.0
                        },
                        new
                        {
                            Id = 21,
                            IdCategory = 6,
                            Name = "Apple Juice",
                            Price = 3.0
                        },
                        new
                        {
                            Id = 22,
                            IdCategory = 6,
                            Name = "Carrot Juice",
                            Price = 3.2000000000000002
                        },
                        new
                        {
                            Id = 23,
                            IdCategory = 7,
                            Name = "Vanilla Ice Cream",
                            Price = 2.5
                        },
                        new
                        {
                            Id = 24,
                            IdCategory = 7,
                            Name = "Chocolate Ice Cream",
                            Price = 2.5
                        },
                        new
                        {
                            Id = 25,
                            IdCategory = 7,
                            Name = "Strawberry Ice Cream",
                            Price = 2.5
                        },
                        new
                        {
                            Id = 26,
                            IdCategory = 8,
                            Name = "Affogato",
                            Price = 5.5
                        },
                        new
                        {
                            Id = 27,
                            IdCategory = 8,
                            Name = "Irish Coffee",
                            Price = 6.0
                        });
                });

            modelBuilder.Entity("WinFormApp.Models.FoodCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("FoodCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Coffee"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tea"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Smoothies"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pastries"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sandwiches"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Juices"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Ice Cream"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Specials"
                        });
                });

            modelBuilder.Entity("WinFormApp.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Module = "Account",
                            Name = "Create Account"
                        },
                        new
                        {
                            Id = 2,
                            Module = "Account",
                            Name = "Update Account"
                        },
                        new
                        {
                            Id = 3,
                            Module = "Account",
                            Name = "Delete Account"
                        },
                        new
                        {
                            Id = 4,
                            Module = "Account",
                            Name = "View Account"
                        },
                        new
                        {
                            Id = 5,
                            Module = "Food",
                            Name = "Create Food"
                        },
                        new
                        {
                            Id = 6,
                            Module = "Food",
                            Name = "Update Food"
                        },
                        new
                        {
                            Id = 7,
                            Module = "Food",
                            Name = "Delete Food"
                        },
                        new
                        {
                            Id = 8,
                            Module = "Food",
                            Name = "View Food"
                        },
                        new
                        {
                            Id = 9,
                            Module = "Category",
                            Name = "Create Category"
                        },
                        new
                        {
                            Id = 10,
                            Module = "Category",
                            Name = "Update Category"
                        },
                        new
                        {
                            Id = 11,
                            Module = "Category",
                            Name = "Delete Category"
                        },
                        new
                        {
                            Id = 12,
                            Module = "Category",
                            Name = "View Category"
                        },
                        new
                        {
                            Id = 13,
                            Module = "Table",
                            Name = "Create Table"
                        },
                        new
                        {
                            Id = 14,
                            Module = "Table",
                            Name = "Update Table"
                        },
                        new
                        {
                            Id = 15,
                            Module = "Table",
                            Name = "Delete Table"
                        },
                        new
                        {
                            Id = 16,
                            Module = "Table",
                            Name = "View Table"
                        },
                        new
                        {
                            Id = 17,
                            Module = "Role",
                            Name = "Create Role"
                        },
                        new
                        {
                            Id = 18,
                            Module = "Role",
                            Name = "Update Role"
                        },
                        new
                        {
                            Id = 19,
                            Module = "Role",
                            Name = "Delete Role"
                        },
                        new
                        {
                            Id = 20,
                            Module = "Role",
                            Name = "View Role"
                        },
                        new
                        {
                            Id = 21,
                            Module = "Role",
                            Name = "Create Permission"
                        },
                        new
                        {
                            Id = 22,
                            Module = "Role",
                            Name = "Update Permission"
                        },
                        new
                        {
                            Id = 23,
                            Module = "Role",
                            Name = "Delete Permission"
                        },
                        new
                        {
                            Id = 24,
                            Module = "Role",
                            Name = "View Permission"
                        });
                });

            modelBuilder.Entity("WinFormApp.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Staff"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Tester"
                        });
                });

            modelBuilder.Entity("WinFormApp.Models.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 3
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 4
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 5
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 6
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 7
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 8
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 9
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 10
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 11
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 12
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 13
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 14
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 15
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 16
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 17
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 18
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 19
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 20
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 21
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 22
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 23
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 24
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 3
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 4
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 5
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 6
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 7
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 8
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 9
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 10
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 11
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 12
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 13
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 14
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 15
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 16
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 16
                        });
                });

            modelBuilder.Entity("WinFormApp.Models.TableFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TableFoods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Table 1",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Table 2",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Table 3",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Table 4",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Table 5",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Table 6",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Table 7",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Table 8",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Table 9",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Table 10",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Table 11",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Table 12",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Table 13",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Table 14",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Table 15",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Table 16",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Table 17",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Table 18",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Table 19",
                            Status = "Empty"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Table 20",
                            Status = "Empty"
                        });
                });

            modelBuilder.Entity("WinFormApp.Models.Account", b =>
                {
                    b.HasOne("WinFormApp.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WinFormApp.Models.Bill", b =>
                {
                    b.HasOne("WinFormApp.Models.TableFood", "Table")
                        .WithMany("Bills")
                        .HasForeignKey("IdTable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WinFormApp.Models.BillInfo", b =>
                {
                    b.HasOne("WinFormApp.Models.Bill", "Bill")
                        .WithMany("BillInfos")
                        .HasForeignKey("IdBill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormApp.Models.Food", "Food")
                        .WithMany("BillInfos")
                        .HasForeignKey("IdFood")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WinFormApp.Models.Food", b =>
                {
                    b.HasOne("WinFormApp.Models.FoodCategory", "Category")
                        .WithMany("Foods")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WinFormApp.Models.RolePermission", b =>
                {
                    b.HasOne("WinFormApp.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormApp.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
